<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Yunus Emre Tapan</title><link>https://tapanyemre.github.io/blog/categories/golang/</link><description>Recent content in Golang on Yunus Emre Tapan</description><generator>Hugo</generator><language>en-us</language><managingEditor>tapanyemre@gmail.com (Yunus Emre Tapan)</managingEditor><webMaster>tapanyemre@gmail.com (Yunus Emre Tapan)</webMaster><copyright>Yunus Emre Tapan</copyright><lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate><atom:link href="https://tapanyemre.github.io/blog/categories/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Private Go modules in GitLab CI/CD</title><link>https://tapanyemre.github.io/blog/notes/private-go-modules-gitlab-ci/</link><pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate><author>tapanyemre@gmail.com (Yunus Emre Tapan)</author><guid>https://tapanyemre.github.io/blog/notes/private-go-modules-gitlab-ci/</guid><description>&lt;p>This took way too long for me to figure out, so here&amp;rsquo;s how to install private Go modules in &lt;a href="https://docs.gitlab.com/ee/ci/">GitLab CI/CD&lt;/a> pipeline
jobs:&lt;/p>
&lt;h3 id="netrc-and-goprivate" class="scroll-mt-8 group">
 netrc and GOPRIVATE
 
 &lt;a href="#netrc-and-goprivate"
 class="no-underline hidden opacity-50 hover:opacity-100 !text-inherit group-hover:inline-block"
 aria-hidden="true" title="Link to this heading" tabindex="-1">
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 width="16"
 height="16"
 fill="none"
 stroke="currentColor"
 stroke-linecap="round"
 stroke-linejoin="round"
 stroke-width="2"
 class="lucide lucide-link w-4 h-4 block"
 viewBox="0 0 24 24"
>
 &lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" />
 &lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" />
&lt;/svg>

 &lt;/a>
 
&lt;/h3>
&lt;p>Add the following to the jobs that require installing dependencies and replace &lt;code>&amp;lt;namespace&amp;gt;&lt;/code> with your organization or
username which hosts the private Go modules:&lt;/p></description></item><item><title>Highlight syntax in Go templates</title><link>https://tapanyemre.github.io/blog/notes/nvim-go-template-syntax-highlighting/</link><pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate><author>tapanyemre@gmail.com (Yunus Emre Tapan)</author><guid>https://tapanyemre.github.io/blog/notes/nvim-go-template-syntax-highlighting/</guid><description>&lt;p>Go &lt;a href="https://pkg.go.dev/text/template">template&lt;/a> files are often named example.html.tmpl or example.md.tmpl to indicate they’re templates for specific formats.&lt;/p>
&lt;p>However, the .tmpl extension can prevent Neovim from highlighting the underlying syntax, making them harder to edit.&lt;/p>
&lt;p>Here’s how to configure Neovim to highlight these files correctly:&lt;/p>
&lt;p>Create the file &lt;code>~/.config/$NVIM_APPNAME/syntax/gotmpl.vim&lt;/code> with the following content to configure basic highlighting
of Go template code in &lt;code>{{ ... }}&lt;/code> delimiters:&lt;/p>
&lt;figure class="codeblock not-prose relative scroll-mt-8" id="codeblock-01">
 &lt;aside
 class="absolute right-0 top-0 hidden rounded-bl-sm rounded-tr-sm bg-white/10 px-2 py-1 text-white/70 transition-opacity md:inline-block"
 >
 &lt;div class="codeblock-meta flex max-w-xs flex-row items-center space-x-3">
 &lt;div class="small-caps shrink cursor-default truncate font-mono text-xs" aria-hidden="true">
 &lt;span class="relative">vim&lt;/span>
 &lt;/div>
 &lt;div>
 &lt;clipboard-copy
 type="button"
 aria-label="Copy code to clipboard"
 title="Copy code to clipboard"
 class="block cursor-pointer transition-colors hover:text-sky-400"
 target="#codeblock-01 code"
 >
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 fill="none"
 stroke="currentColor"
 stroke-width="2"
 stroke-linecap="round"
 stroke-linejoin="round"
 class="lucide lucide-clipboard h-4 w-4"
 viewBox="0 0 24 24"
>
 &lt;rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
 &lt;path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
&lt;/svg>

 &lt;/clipboard-copy>
 &lt;/div>
 &lt;div>
 &lt;a
 href="#codeblock-01"
 class="block"
 aria-label="Link to this code block"
 title="Link to this code block"
 >
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 width="16"
 height="16"
 fill="none"
 stroke="currentColor"
 stroke-linecap="round"
 stroke-linejoin="round"
 stroke-width="2"
 class="lucide lucide-link w-4 h-4 block"
 viewBox="0 0 24 24"
>
 &lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" />
 &lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" />
&lt;/svg>

 &lt;/a>
 &lt;/div>
 &lt;/div>
 &lt;/aside>
 &lt;p class="sr-only">vim code snippet start&lt;/p></description></item><item><title>Templating all the things</title><link>https://tapanyemre.github.io/blog/posts/tatt-template-all-the-things/</link><pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate><author>tapanyemre@gmail.com (Yunus Emre Tapan)</author><guid>https://tapanyemre.github.io/blog/posts/tatt-template-all-the-things/</guid><description>&lt;p class="lead">I created and released a simple CLI tool to render Go templates using data from YAML, JSON, or TOML files.&lt;/p></description></item><item><title>Quick tip: Automatic test runs when files change</title><link>https://tapanyemre.github.io/blog/posts/automatically-run-go-test-on-file-changes/</link><pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><author>tapanyemre@gmail.com (Yunus Emre Tapan)</author><guid>https://tapanyemre.github.io/blog/posts/automatically-run-go-test-on-file-changes/</guid><description>&lt;p class="lead">How to use watchexec to get instant feedback from your tests when you change a file in your Go project.&lt;/p></description></item></channel></rss>