[{"categories":[],"date":"2021-02-28T00:00:00Z","id":"/archive/blog/finding-evil-go-packages/","keywords":[],"summary":"\u003cp\u003eBecause of the big \u003ca href=\"https://en.wikipedia.org/wiki/2020_United_States_federal_government_data_breach\"\u003eSolarWinds hack\u003c/a\u003e and the recent blog post describing a new \u003ca href=\"https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610\"\u003eDependency Confusion attack\u003c/a\u003e, there has been a lot of talk lately about supply chain attacks, the sneaky technique of compromising less secure elements in a supply chain to compromise more secure targets.\u003c/p\u003e\n\u003cp\u003eA popular target for supply chain attacks has always been the many package management systems for popular programming languages such as NPM for JavaScript, Rubygems for Ruby, and PyPI for Python. These systems have been plagued for years by malicious actors uploading malicious packages and waiting for victims to install them.\u003c/p\u003e","tags":[],"title":"Finding Evil Go Packages"},{"categories":[],"date":"2018-11-04T00:00:00Z","id":"/archive/blog/aquatone-now-in-go/","keywords":[],"summary":"\u003cp\u003eI\u0026rsquo;m continuing my quest to move my open source tools from Ruby to Go. Earlier this year, I released the \u003ca href=\"/blog/gitrob-now-in-go/\"\u003eGo rewrite of Gitrob\u003c/a\u003e and now I\u0026rsquo;m happy to announce the release of a new and streamlined version of Aquatone!\u003c/p\u003e\n\u003ch3 id=\"whats-changed\" class=\"scroll-mt-8 group\"\u003e\n  What\u0026rsquo;s Changed\n  \n    \u003ca href=\"#whats-changed\"\n        class=\"no-underline hidden opacity-50 hover:opacity-100 !text-inherit group-hover:inline-block\"\n        aria-hidden=\"true\" title=\"Link to this heading\" tabindex=\"-1\"\u003e\n        \u003csvg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"16\"\n  height=\"16\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n  stroke-width=\"2\"\n  class=\"lucide lucide-link w-4 h-4 block\"\n  viewBox=\"0 0 24 24\"\n\u003e\n  \u003cpath d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\" /\u003e\n  \u003cpath d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\" /\u003e\n\u003c/svg\u003e\n\n    \u003c/a\u003e\n  \n\u003c/h3\u003e\n\u003cp\u003eQuite a lot has changed in the new version. The two major themes of the rewrite is simplification and ease-of-use:\u003c/p\u003e","tags":[],"title":"AQUATONE: Now in Go"},{"categories":[],"date":"2018-10-05T00:00:00Z","id":"/archive/blog/drawio-for-threat-modeling/","keywords":[],"summary":"\u003cp\u003eI\u0026rsquo;ve spent a good amount of time lately trying to find a good tool for threat model diagramming. I defined a couple of requirements and started assessing what was out there:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSupport for Data Flow Diagrams (DFD) and Attack Trees:\u003c/strong\u003e I believe these are essential for threat modeling. Sequence Diagrams are a plus too.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEnjoyable and easy to use:\u003c/strong\u003e It must be easy to create diagrams and no weird bugs to make it clunky or cumbersome to work with. This is important, not only for my own sanity, but also for getting developers to adopt the practice. If you don\u0026rsquo;t provide them with a good tool, they probably won\u0026rsquo;t do it.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFree and cross-platform:\u003c/strong\u003e It must be free and work on Windows, Mac and Linux. If the tool only works on Windows or you have to juggle licenses, it makes it much harder to introduce threat modeling in an organization.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNot web or \u0026ldquo;Cloud\u0026rdquo; based:\u003c/strong\u003e It should feel like a proper desktop application and storage should be good old local files. Cloud (a.k.a. someone else\u0026rsquo;s computer) can be nice, but not for threat modeling. File based storage also makes it easy to check the diagrams into version control and make it live next to the code.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI checked out quite a lot of different tools but none of them fulfilled the requirements. Many didn\u0026rsquo;t have elements for DFDs and Attack Trees, \u003ca href=\"https://www.microsoft.com/en-us/download/details.aspx?id=49168\"\u003eMicrosoft Threat Modeling Tool\u003c/a\u003e only runs on Windows, \u003ca href=\"https://threatmodeler.com/\"\u003eThreat Modeler\u003c/a\u003e is web based, \u003ca href=\"https://threatdragon.org/\"\u003eThreat Dragon\u003c/a\u003e felt awkward to work with, and \u003ca href=\"http://dia-installer.de/index.html.en\"\u003eDia\u003c/a\u003e is old, clunky and buggy.\u003c/p\u003e","tags":[],"title":"Draw.io for threat modeling"},{"categories":[],"date":"2018-06-09T00:00:00Z","id":"/archive/blog/gitrob-now-in-go/","keywords":[],"summary":"\u003cp\u003eI\u0026rsquo;m happy to announce that a new version of Gitrob has been released. This time it\u0026rsquo;s a complete rewrite from Ruby to the amazing \u003ca href=\"https://golang.org/\"\u003eGo programming language\u003c/a\u003e!\u003c/p\u003e\n\u003cp\u003eThe old Ruby version of Gitrob got messy and was neglected by me because I got tired of the code. I decided it was time for a rethink and rewrite of the project. As I had been planning to pick up Go as my next programming language I thought it would be interesting to make a lean and mean Go implementation. This turned out to be a pretty amazing decision!\u003c/p\u003e","tags":[],"title":"Gitrob: Now in Go"}]